aa<-list()
for (i in 1:5){
aa[i]<-(a[i]-mean(a))
}
aa
bb<-(unlist(aa))
str(bb)
sum(bb)
?sum
sum (bb, na.rm = FALSE)
sum (-bb, na.rm = FALSE)
var(a);var(b)
sum(a)
sum(a)/5
sqrt(sum(a)/5)
(sum(a)/5)
mean(a);mean(b)
aa<-list()
for (i in 1:5){
aa[i]<-(a[i]-mean(a))^2
}
aa
bb<-(unlist(aa))
str(bb)
sum (bb, na.rm = FALSE)
sum(a)/5
sum(bb)/5
sqrt (sum(bb)/5)
var(a);var(b)
sum (bb, na.rm = FALSE)
sum(bb)/5
sqrt (sum(bb)/5)
var(a);var(b)
(sum(bb)/5)
aa
str(a)
aa<-list()
for (i in 1:5){
aa[i]<-(a[i]-mean(a))
}
aa
bb<-(unlist(aa))
bb^2
(sum(bb^2)/5)
sum(bb^2)
.425*5
.425*4
aa<-list()
for (i in 1:5){
aa[i]<-(b[i]-mean(a))
}
aa
bb<-(unlist(aa))
bb^2
sum (bb, na.rm = FALSE)
(sum(bb^2)/4)
var(a);var(b)
bb
aa<-list()
for (i in 1:5){
aa[i]<-(b[i]-mean(b))
}
aa
bb<-(unlist(aa))
bb^2
sum (bb, na.rm = FALSE)
(sum(bb^2)/4)
mean(a);mean(b)
sd(a);sd(b)
var(a);var(b)
library(caret);library (randomForest)
update.packages(checkBuilt=TRUE, ask=FALSE)
library(caret);library (randomForest)
install.packages("ggplot2")
library(caret);library (randomForest)
library(shiny)
install.packages("shiny")
library(shiny)
runExample("10_download")
runExample("08_html")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rCharts")
data(airquality)
str (airquality)
dTable(airquality, sPaginationType = "full_numbers")
library (rCharts)
dTable(airquality, sPaginationType = "full_numbers")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
head(airquality)
d <- data.frame(airquality, stringsAsFactors = FALSE)
print(d)
airquality
airquality
dTable(airquality, sPaginationType = "full_numbers")
require (rCharts)
library (rCharts)
library (rCharts)
??rCharts
require(devtools)
install.packages("devtools")
require(devtools)
library (rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$save('fig/n1.html', cdn = TRUE)
cat('<iframe src="fig/n1.html" width=100%, height=600></iframe>')
cat('<iframe src="fig/n1.html" width=100%, height=600></iframe>')
haireye = as.data.frame(HairEyeColor)
haireye
str(n1)
str(n1, levels=1)
n1$save('fig/n1.html', cdn = TRUE)
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
## Example 2 Facetted Barplot
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
r1$print("chart1")
r1$plot("chart1")
str(r1$print)
r1
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
str(r1$print)
r1$print ("chart1")
r1
require(rCharts)
open_notebook()
library (shiny)
r1$print ("chart1")
library (reshape2)
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
r1$print ("chart1")
ext_widgets: {rCharts: "libraries/polycharts"}
r1$print ("chart1")
n1$print
rCharts::open_notebook()
options(RCHART_WIDTH = 600, RCHART_HEIGHT = 400)
knitr::opts_chunk$set(comment = NA, results = "asis", tidy = F, message = F)
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
r1
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1
n1
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1
r1$print ("chart1")
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
?nPlot
r1$
r1$html
r1$html()
r1$save('myPlot.html') #save as html file
wd()
cwd()
ls()
dir()
library (shiny)
library (rCharts)
require(rCharts)
library (reshape2)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1
n1$show(cdn = TRUE)
require( rCharts )
options(RCHART_TEMPLATE = 'Rickshaw.html')
#specify the data
data = data.frame(
c( 0, 1, 2, 3 ),
c( 40, 49, 17, 42 ),
stringsAsFactors = FALSE
)
colnames(data) <- c("x","y")
data
r1 <- Rickshaw$new()
r1$layer(
y ~ x,
data = data,
type = "area",
colors= "steelblue",
height = 240,
width = 540
)
r1$set(
hoverDetail = FALSE,
xAxis = FALSE,
yAxis = FALSE,
shelving = FALSE,
legend = FALSE,
slider = FALSE,
highlight = FALSE
)
r1
r1
open_notebook()
install_github('rCharts', 'ramnathv')
require(devtools)
install.packages("devtools")
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
require(rCharts)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
)
n1$show(cdn = TRUE)
options(RCHART_WIDTH = 600, RCHART_HEIGHT = 400)
knitr::opts_chunk$set(comment = NA, results = "asis", tidy = F, message = F)
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
n1
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
str(r1$print)
r1$print ("chart1")
r1
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
require(devtools)
library(devtools)
require (devtools)
rCharts::open_notebook()
library (reshape2)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$show(cdn = TRUE)
n1$show
n1$show (cdn = TRUE)
dev.off()
n1$show (cdn = TRUE)
n1
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
n1
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
str(r1$print)
r1$print ("chart1")
r1$save('myPlot.html') #save as html file
r1
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
session.info()
sessionInfo()
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
dev.off()
n1$show (cdn = TRUE)
library (shiny)
library (rCharts)
require(rCharts)
library (reshape2)
# rCharts::open_notebook()
sessionInfo()
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
dev.off()
n1$show (cdn = TRUE)
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
n1$show("chart3")
n1$show("cdn = TRUE")
n1
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
r1
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
require( rCharts )
options(RCHART_TEMPLATE = 'Rickshaw.html')
#specify the data
data = data.frame(
c( 0, 1, 2, 3 ),
c( 40, 49, 17, 42 ),
stringsAsFactors = FALSE
)
colnames(data) <- c("x","y")
#build the plot
r1 <- Rickshaw$new()
r1$layer(
y ~ x,
data = data,
type = "area",
colors= "steelblue",
height = 240,
width = 540
)
#turn off all the nice built in features
#to match the sparse first example
r1$set(
hoverDetail = FALSE,
xAxis = FALSE,
yAxis = FALSE,
shelving = FALSE,
legend = FALSE,
slider = FALSE,
highlight = FALSE
)
r1
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$show("chart3")
n1$print("chart3")
require(reshape2)
uspexp <- melt(USPersonalExpenditure)
names(uspexp)[1:2] = c("category", "year")
x1 <- xPlot(value ~ year, group = "category", data = uspexp, type = "line-dotted")
x1$save('fig/x1.html', cdn = TRUE)
cat('<iframe src="fig/x1.html" width=100%, height=600></iframe>')
shower
library (rCharts)
install.packages("rCharts")
library (shiny)
library (rCharts)
require(rCharts)
library (reshape2)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
# dev.off()
n1$show (cdn = TRUE)
library (shiny)
library (rCharts)
require(rCharts)
require(devtools)
install_github('rCharts', 'ramnathv')
library (rCharts)
sessionInfo()
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
# dev.off()
n1$show (cdn = TRUE)
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight')
p1
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1
n1$show (cdn = TRUE)
options(RCHART_WIDTH = 600, RCHART_HEIGHT = 400)
knitr::opts_chunk$set(comment = NA, results = "asis", tidy = F, message = F)
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$show("chart3")
n1
n1
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
str(r1$print)
r1
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
require( rCharts )
options(RCHART_TEMPLATE = 'Rickshaw.html')
#specify the data
data = data.frame(
c( 0, 1, 2, 3 ),
c( 40, 49, 17, 42 ),
stringsAsFactors = FALSE
)
colnames(data) <- c("x","y")
#build the plot
r1 <- Rickshaw$new()
r1$layer(
y ~ x,
data = data,
type = "area",
colors= "steelblue",
height = 240,
width = 540
)
#turn off all the nice built in features
#to match the sparse first example
r1$set(
hoverDetail = FALSE,
xAxis = FALSE,
yAxis = FALSE,
shelving = FALSE,
legend = FALSE,
slider = FALSE,
highlight = FALSE
)
r1
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = 'point',
color = 'gear')
r1$print('chart1')
r1
require(reshape2)
uspexp <- melt(USPersonalExpenditure)
names(uspexp)[1:2] = c("category", "year")
x1 <- xPlot(value ~ year, group = "category", data = uspexp, type = "line-dotted")
x1
uspexp
x1 <- xPlot(value ~ year, group = "category", data = uspexp, type = "line-dotted")
x1
cat('<iframe src="fig/x1.html" width=100%, height=600></iframe>')
x1$save('fig/x1.html', cdn = TRUE)
x1 <- xPlot(value ~ year, group = "category", data = uspexp, type = "line-dotted")
x1
x1$save('fig/x1.html', cdn = TRUE)
x1 <- xPlot(value ~ year, group = "category", data = uspexp, type = "line-dotted")
#x1
x1$save('fig/x1.html', cdn = TRUE)
n1$show
n1$render
n1$show (cdn = TRUE)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male'))
n1$show (cdn = TRUE)
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight')
p1
library(rCharts)
library(knitr)
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight')
p1
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/w1/first_example')
library (shinyapps)
library (devtools)
?deployApp
library(shinyapps)
?deployApp
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
setwd("~/GitHub/first_deck")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
?mtcars
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
shiny::runApp('C:/Users/claudio/Dropbox/aMYMY-2012/utilita-locale/R-package/C_DataProducts/project/mpg_vs_am')
slidify("index.Rmd")
browseURL("index.html")
?sprintf
sprintf("%s is %i feet tall\n", "Sven", 7  )
sprintf("%.0f%% said yes (out of a sample of size %.0f)", 66.666, 3)
sprintf("./%s.txt.gz", book
sprintf("./%s.txt.gz", book)
book <- c ("summer")
sprintf("./%s.txt.gz", book)
shiny::runApp('~/GitHub/wordcloud')
